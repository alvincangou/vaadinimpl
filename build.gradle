group 'com.test'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
sourceCompatibility = 1.5
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "fi.jasoft.plugin:gradle-vaadin-plugin:1.1.2"
    }
}



apply plugin: "fi.jasoft.plugin.vaadin"

repositories {
    mavenCentral()
}
dependencies {
    runtime files(org.gradle.internal.jvm.Jvm.current().toolsJar)
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.4.Final'
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'
    compile group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '9.0.0.M13'

    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.3.3.Final'

    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final-redhat-1'
    compile group: 'com.vaadin', name: 'vaadin-client', version: '7.7.7'


}


buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.netflix.nebula:gradle-ospackage-plugin:4.1.0"

        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.5'

    }
}

apply plugin: "nebula.ospackage"
apply plugin: "com.bmuschko.tomcat"
apply plugin: 'nebula.rpm'
apply plugin: 'nebula.deb'



tomcat {

    httpPort = 8080
    httpsPort = 8181
    enableSSL = true
    contextPath = 'helloworld'

}


ospackage {
    packageName = "helloworld"

    // Uses the main project version
    version = "1"

    /* Could be anything - in our production builds,
       this is set to the git commit hash */
    release = 1

    os = LINUX
    type = BINARY



    into "/opt/local/helloworld"



    from("build/libs") {
        fileMode 0500
        into "bin"
    }

    from("build/libs") {
        fileMode 0500
        into "lib"

    }


    from('src/bin') {
        into 'bin'
        exclude 'database'
        fileMode = 0550
    }
    from(jar.outputs.files) {

        fileMode 0500
        into "lib"
    }
    from("src/main/ressources") {
        fileType CONFIG | NOREPLACE
        fileMode 0754
        into "conf"
    }
    from("src/conf") {
        fileMode 0500
        into "conf"
    }
    from("src/server") {
        fileMode 0500
        into "server"
    }




}
    buildRpm {


        directory("/opt/local/helloworld/log", 0755)

        link("/etc/init.d/helloworld",
                "/opt/local/helloworld/bin/helloworldrpm.upstart")

        link("/etc/helloworld.conf",
                "/opt/local/helloworld/conf/helloworld.conf")

    }
    buildDeb {

        directory("/opt/local/helloworld/log", 0755)
      link("/etc/init.d/helloworld",
                "/opt/local/helloworld/bin/helloworld.upstart")

        link("/etc/helloworld.conf",
                "/opt/local/helloworld/conf/helloworld.conf")

    }
